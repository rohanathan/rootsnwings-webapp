# cloudbuild-frontend.yaml
steps:
  # Step 1: Build the Docker Image for the frontend
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend' # Run this step inside the frontend folder
    args:
      - 'build'
      - '-t'
      - 'europe-west2-docker.pkg.dev/${PROJECT_ID}/rootsnwings-repo/rootsnwings-frontend:$SHORT_SHA'
      - '.'

  # Step 2a: Run tests and generate coverage
  - name: 'node:20-slim'
    id: 'run-tests'
    dir: 'frontend'
    args:
      - 'bash'
      - '-c'
      - |
        npm ci
        npm run test -- --coverage --watchAll=false

  # Step 2b: SonarCloud Scan (SAST)
  - name: 'sonarsource/sonar-scanner-cli:latest'
    id: 'sonar-scan'
    dir: 'frontend'
    secretEnv: ['SONAR_TOKEN']
    entrypoint: 'sonar-scanner'
    args:
      - '-Dsonar.projectKey=rohanathan_rootsnwings-webapp'
      - '-Dsonar.organization=rohanathan'
      - '-Dsonar.host.url=https://sonarcloud.io'
      - '-Dsonar.sources=src'
      - '-Dsonar.tests=src'
      - '-Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx'
      - '-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info'
      - '-Dsonar.working.directory=/tmp/.scannerwork'

  # Step 3: Scan Image with Trivy
  - name: 'aquasec/trivy'
    id: 'vulnerability-scan'
    args:
      - 'image'  # THIS IS THE KEY FIX - specify the subcommand first
      - '--format'
      - 'json'
      - '--severity'
      - 'CRITICAL'  # Check for CRITICAL and HIGH vulnerabilities
      - '--exit-code'
      - '1' # Causes the build to fail if vulnerabilities are found
      - '--ignore-unfixed' # Focus on issues you can actually fix
      - 'europe-west2-docker.pkg.dev/${PROJECT_ID}/rootsnwings-repo/rootsnwings-frontend:$SHORT_SHA'

  # Step 4: Push the Docker Image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'europe-west2-docker.pkg.dev/${PROJECT_ID}/rootsnwings-repo/rootsnwings-frontend:$SHORT_SHA'

  # Step 5: GitOps Hand-off (Update config repo using yq)
  - name: 'alpine:3.19'
    id: 'update-config-repo'
    entrypoint: 'sh'
    secretEnv: ['SSH_KEY']
    args:
      - -ceu
      - |
        # Install Git, SSH, and yq
        apk add --no-cache git openssh yq
        
        # --- SSH setup ---
        mkdir -p /root/.ssh
        echo "$$SSH_KEY" > /root/.ssh/id_rsa
        chmod 600 /root/.ssh/id_rsa
        ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
        
        # Force SSH to use our injected key
        export GIT_SSH_COMMAND='ssh -i /root/.ssh/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes'
        
        # --- Git identity and safety config ---
        git config --global user.email "gcp-cloud-build@${PROJECT_ID}.iam.gserviceaccount.com"
        git config --global user.name "Cloud Build"
               
        # --- Clone config repo ---
        git clone --branch "${_CONFIG_BRANCH}" --depth 1 "${_CONFIG_REPO}" /workspace/config-repo
        cd /workspace/config-repo
        git config --global --add safe.directory /workspace/config-repo

        # Check for the values file
        test -f "${_VALUES_PATH}" || { echo "ERROR: values file not found: ${_VALUES_PATH}"; exit 1; }

        # --- Update YAML (image.tag) safely with yq ---
        # This updates the image tag in frontend/values.yaml
        yq -i ".image.tag = \"$SHORT_SHA\"" "${_VALUES_PATH}"

        # --- Commit only if there are changes ---
        if ! git diff --quiet; then
          git add "${_VALUES_PATH}"
          git commit -m "ci: update frontend image tag to $SHORT_SHA"
          git push origin "${_CONFIG_BRANCH}"
          echo "Pushed ${_VALUES_PATH} with tag $SHORT_SHA"
        else
          echo "No change in ${_VALUES_PATH}; skipping commit."
        fi

# --- Secret Manager Configuration (Required for SSH access to config repo) ---
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/github-ssh-key/versions/latest
    env: 'SSH_KEY'
  - versionName: projects/$PROJECT_ID/secrets/sonar-token/versions/latest
    env: 'SONAR_TOKEN'

# --- Custom substitutions (Required to define config repo paths) ---
substitutions:
  _CONFIG_REPO: git@github.com:rohanathan/rohanathan-rootsnwings-k8s-config.git
  _CONFIG_BRANCH: main
  _VALUES_PATH: frontend/values.yaml # <-- Target the frontend values file
  
# Logging bucket
logsBucket: 'gs://rootsnwings-build-logs-rootsnwings-465610'